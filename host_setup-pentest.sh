#!/bin/bash

# Setup a host/VM for pentesting.
#
# Can be called multiple times, but you will get multiple entries in your Readline and Bash init
# files since we append to them.

DEFAULT_PYENV_DIR=~/pyenv/tools
NUM_BROWSER_PROFILES=2

function print_status() {
	echo "[+] $1"
}

function prompt_yes_or_no() {
	while true; do
		read -p "$1 [y|n] "
		[ "${REPLY,,}" == "y" ] && return 0
		[ "${REPLY,,}" == "n" ] && return 1
	done
}

function prompt_default_reply() {
	read -p "$1 [$2]: "
    echo ${REPLY:-$2}
}

print_status "Installing packages."
sudo apt-get install -y \
	 python-pip \
	 virtualenv \
	 keepass2 \
	 xdotool \
	 git \
	 git-cola \
	 gitk \
	 redshift-gtk \
	 geany \
	 geany-plugin-addons \
	 geany-plugin-gproject \
	 meld \
	 alien \
	 python-dev \
	 tree \
	 silversearcher-ag \
	 p7zip-full \
	 emacs \
	 indicator-multiload \
	 bash-completion \
	 jq \
	 python-doc \
	 python-tk \
	 filezilla

print_status "Installing Oracle Java."
# Oracle Java from Webupd8 Repository
sudo add-apt-repository -y ppa:webupd8team/java
sudo apt-get update
sudo apt-get install -y oracle-java8-installer

# install SSLyze (https://github.com/nabla-c0d3/sslyze) and AWS shell
print_status "Installing SSLyze package dependencies."
sudo apt-get install -y libffi-dev libssl-dev
pyenv_dir=$(prompt_default_reply "Python virtual environment path" "$DEFAULT_PYENV_DIR")
[ ! -f "$pyenv_dir" ] && virtualenv "$pyenv_dir"
. "$pyenv_dir/bin/activate"
print_status "Installing SSLyze and AWS shell."
pip install SSLyze aws-shell
deactivate

# setup browser (Firefox) profiles
## create Unity Launcher icon for profiles. Copy desktop file from system location and
##   change "Exec" keys to include profile and change "Name" key to indicate profile
profile_base=$(prompt_default_reply "Firefox profile basename" "account")
print_status "Installing ${NUM_BROWSER_PROFILES} Firefox profiles."
for p in $(seq $NUM_BROWSER_PROFILES); do
	profile_filename=~/.local/share/applications/$profile_base$p-firefox.desktop
	print_status "Profile $p at $profile_filename."
	sed "s/^Name=.*/& (${profile_base}$p)/" /usr/share/applications/firefox.desktop | \
		sed "s/^Exec=.*/& -P \"${profile_base}$p\"/" > $profile_filename
done

print_status "Editing Bash init file to add case insensitive completion."
echo set completion-ignore-case on >> ~/.inputrc

# add git prompt to Bash init file
print_status "Editing Bash init file to add git prompt."
cat >>~/.bashrc <<EOF
# added by $(basename $0) at $(date). For git
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUPSTREAM="auto"
EOF

echo
echo 'Manual Stuff'
echo '* Typora (https://typora.io/)'
echo '* Burp proxy'
echo '  * send over burp, license, and sigv4signer extension (encrypted 7z or S3 bucket)'
echo '  * append Burp CA certificate to cacert.pem file in Python requests module'
echo "* Create $NUM_BROWSER_PROFILES browser profiles for use by intercepting proxy (about:profiles)"
echo '* Install uBlock Origin adblocker and FoxyProxy Standard extensions in browser'
echo '* Configure Emacs'
echo 'Read end of script for miscellaneous things'

exit

# Miscellaneous

# "SNI (Subject Name Indication) extension" warning from sigv4_script.py
pip install pyopenssl ndg-httpsclient pyasn1

# "subjectAltName" warning from awscli
## import warnings
## warnings.filterwarnings(
##     'ignore',
##     '^Certificate has no `subjectAltName`',
##     module='botocore.vendored.requests.packages.urllib3.connection'
## )

# Nmap
# install updated nmap (https://nmap.org/dist/?C=M&O=D); the one in Ubuntu APT repository is
#   probably outdated
## use alien to convert nmap RPM package to .deb
